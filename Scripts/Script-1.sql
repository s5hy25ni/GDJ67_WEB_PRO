CREATE TABLE EMP AS SELECT * FROM EMPLOYEES e ;
CREATE TABLE DEPT AS SELECT * FROM DEPARTMENTS;
CREATE TABLE JOB2 AS SELECT * FROM JOBS;
ALTER TABLE HR.EMP MODIFY EMAIL VARCHAR2(25) NULL;

CREATE TABLE ADMINS(
	ADMIN_ID VARCHAR2(20),
	ADMIN_PW VARCHAR2(256)
);


SELECT RANDOM()
	FROM DUAL;

INSERT INTO ADMINS VALUES('hamoon', '03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4');
INSERT INTO ADMINS VALUES('hyeon','f6f2ea8f45d8a057c9566a33f99474da2e5c6a6604d736121650e2730c6fb0a3');

ALTER TABLE ADMINS ADD CONSTRAINT ADMINS_PK PRIMARY KEY(ADMIN_ID);

SELECT job_id FROM job2;
-- WP001 전체조회
SELECT *
	FROM EMP e ;
SELECT EMPLOYEE_ID, FIRST_NAME ||' ' || LAST_NAME AS NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID
	FROM EMP;

-- WP002 이름 or ID를 검색하여 조회하는 기능
SELECT EMPLOYEE_ID, FIRST_NAME ||' ' || LAST_NAME AS NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID
	FROM EMP
	WHERE FIRST_NAME ||' ' || LAST_NAME = 'Steven King';

-- WP003 부서별로 조회하는 기능
SELECT DEPARTMENT_ID 
	FROM EMP
	WHERE DEPARTMENT_ID IS NOT NULL
	GROUP BY DEPARTMENT_ID
	ORDER BY DEPARTMENT_ID ;

SELECT *
	FROM EMP
	WHERE DEPARTMENT_ID = '';

-- WP004 직업별로 조회하는 기능
SELECT JOB_ID  
	FROM EMP
	WHERE JOB_ID  IS NOT NULL
	GROUP BY JOB_ID 
	ORDER BY JOB_ID  ;

SELECT *
	FROM EMP 
	WHERE JOB_ID = '';

-- WP005 채용일로 조회하는 기능
SELECT *
	FROM EMP
	WHERE HIRE_DATE BETWEEN  TO_DATE('2005-01-01', 'YYYY-MM-DD') 
					AND TO_DATE('2007-01-01', 'YYYY-MM-DD') ;

-- WP006 급여별로 조회하는 기능
SELECT *
	FROM EMP
	WHERE SALARY BETWEEN 1000 AND 3000;

-- WP007 폰번호 수정
UPDATE EMP SET PHONE_NUMBER = 515||'.'||123||'.'||4567
			WHERE EMPLOYEE_ID = '100';
-- 중복검사를 위한 SELECT 
SELECT PHONE_NUMBER
	FROM EMP;

-- WP008 JOB_ID, DEPARTMENT_ID 수정 (SELECT로 드롭다운)
SELECT JOB_ID
	FROM JOB2;
SELECT DEPARTMENT_ID 
	FROM DEPT;

UPDATE EMP SET JOB_ID = ''
			WHERE EMPLOYEE_ID = '100';

UPDATE EMP SET DEPARTMENT_ID = ''
			WHERE EMPLOYEE_ID = '100';

-- WP009 MANAGER_ID 자동 수정
SELECT MANAGER_ID 
	FROM DEPT
	WHERE DEPARTMENT_ID = '';

UPDATE EMP SET MANAGER_ID = ''
		WHERE DEPARTMENT_ID = '';

-- WP010 SALARY 수정 (JOB별 MIN, MAX SALARY 범위 내 수정하도록)
SELECT MIN_SALARY
	FROM JOB2
	WHERE JOB_ID = '';

SELECT MAX_SALARY
	FROM JOB2
	WHERE JOB_ID = '';
	
UPDATE EMP SET SALARY = ''
	WHERE EMPLOYEE_ID = '';

-- WP011 사원 삭제
DELETE FROM EMP 
	WHERE EMPLOYEE_ID = '';

-- 신규 사원 등록 (전체컬럼 VER)
INSERT INTO EMP 
	VALUES ('EMPLOYEE_ID', 'FIRST_NAME', 'LAST_NAME', NULL,
			('515'||'.'||'123'||'.'||'4567'), 'HIRE_DATE', 'JOB_ID', 
			'SALARY', 'COMM', NULL, 'DEPARTMENT_ID');
		
-- WP012 중복되지 않는 EMPLOYEE_ID
-- SELECTKEY 구문
SELECT MAX(EMPLOYEE_ID)+1
	FROM EMP;

-- WP013 형식에 맞춘 EMAIL을 위한 SELECT
SELECT SUBSTR(FIRST_NAME,1,1)||UPPER(LAST_NAME)  
	FROM EMP
	WHERE EMPLOYEE_ID = '';

UPDATE EMP SET EMAIL = ''
		WHERE EMPLOYEE_ID = '';
-- WP016 JOB_ID, DEPARTMENT_ID 드롭다운 값
SELECT JOB_ID
	FROM JOB2;
SELECT DEPARTMENT_ID 
	FROM DEPT;

-- MANAGER_ID 자동 입력 => WP009 사용

-- SALARY 직업별 급여 범위 내 입력 => WP010 사용
----------------------------------------------------------요기까지함

--직업별 급여 조회
SELECT EMPLOYEE_ID, JOB_ID, SALARY, 평균급여, "부서내 급여 등수"
FROM (SELECT EMPLOYEE_ID, e.JOB_ID, SALARY, 평균급여,
		 	DENSE_RANK() OVER(PARTITION BY e.JOB_ID ORDER BY SALARY DESC) "부서내 급여 등수"
 		FROM EMP e INNER JOIN (SELECT JOB_ID, ROUND(AVG(SALARY)) 평균급여
				 	FROM EMP e 
				 	GROUP BY JOB_ID) e2
	ON e.JOB_ID = e2.JOB_ID)
	WHERE EMPLOYEE_ID = '100';
	
-- SALARY를 업데이트할 때 JOBS의 최소급여 최대급여 안에서만 갱신되도록 처리하는 트리거
CREATE OR REPLACE TRIGGER TRG_UPDATE_JOB2_EMP_ID
BEFORE UPDATE OF JOB_ID ON JOB2
FOR EACH ROW
DECLARE
    V_OLD_JOB_ID EMP.JOB_ID%TYPE;
    V_NEW_JOB_ID EMP.JOB_ID%TYPE;
BEGIN
    -- 이전 JOB_ID와 새로운 JOB_ID를 저장
    V_OLD_JOB_ID := :OLD.JOB_ID;
    V_NEW_JOB_ID := :NEW.JOB_ID;

    -- EMP 테이블의 JOB_ID 갱신
    UPDATE EMP
    SET JOB_ID = V_NEW_JOB_ID
    WHERE JOB_ID = V_OLD_JOB_ID;
END;

DROP TRIGGER TRG_EMP_SALARY;

-- 사원의 매니저 조회
SELECT e.EMPLOYEE_ID , e.FIRST_NAME , e2.EMPLOYEE_ID AS MANAGER_ID, e2.LAST_NAME AS MANAGER
	FROM EMP e , EMP e2 
	WHERE e.MANAGER_ID = e2.EMPLOYEE_ID
	AND e.EMPLOYEE_ID = '204';

-- 사원의 부서 이름 조회
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID, DEPARTMENT_NAME
	FROM DEPT  JOIN EMP 
	USING(DEPARTMENT_ID)
	WHERE EMPLOYEE_ID = '103';

-- 부서 이름 갱신
UPDATE DEPT SET DEPARTMENT_NAME = 'Admin'
	WHERE DEPARTMENT_NAME = 'Administration';

-- 사원의 직업 이름 조회
SELECT EMPLOYEE_ID, JOB_ID, JOB_TITLE
	FROM JOB2 JOIN EMP
	USING(JOB_ID)
	WHERE EMPLOYEE_ID = '200';

-- 직업 이름 갱신
UPDATE JOB2 SET JOB_ID = 'IT_PROG'
		WHERE JOB_ID = 'IT_FROG';

SELECT *
	FROM EMP e 
	WHERE JOB_ID = 'IT_PROG';